{"version":3,"sources":["Enableable.js","Valve.js","FloatSensor.js","socketio.js","Bilge.js","Coolant.js","TemperatureGraph.js","App.js","serviceWorker.js","index.js"],"names":["EnableButton","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","enabled","react_default","a","createElement","Button","React","Component","Valve","value","open","Input","type","max","style","marginLeft","marginRight","FloatSensor","floating","Icon","name","socket","io","on","data","module","variable","console","log","concat","Bilge","update","bind","assertThisInitialized","setState","content","Enableable","src_Valve","src_FloatSensor","Loader","Segment","Label","className","Coolant","TemperatureGraph","temperatureData","labels","Math","floor","random","toString","val","now","Date","undefined","label","borderColor","randomColor","fill","push","x","y","minDate","length","shift","forceUpdate","datasets","values","scales","xAxes","time","displayFormats","quarter","scaleShowGridLines","scaleGridLineColor","scaleGridLineWidth","scaleShowHorizontalLines","scaleShowVerticalLines","bezierCurve","bezierCurveTension","pointDot","pointDotRadius","pointDotStrokeWidth","pointHitDetectionRadius","datasetStroke","datasetStrokeWidth","datasetFill","es","chartData","options","chartOptions","App","Container","Grid","Row","Column","width","src_Coolant","src_Bilge","src_TemperatureGraph","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6b0439fe.chunk.js","sourcesContent":["import React from 'react';\nimport {Button} from 'semantic-ui-react'\n\n\nclass EnableButton extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            enabled: this.props.enabled,\n        }\n    }\n\n\n    render() {\n        if(this.state.enabled){\n            return (\n                <span>\n                    Enabled <Button>Disable</Button>\n                </span>\n            )\n\n        }\n        return (\n                <span>\n                    Disabled <Button>Enable</Button>\n                </span>\n        )\n    }\n}\n\nexport default EnableButton;","import React from 'react';\nimport {Input} from 'semantic-ui-react'\n\n\nclass Valve extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: this.props.open,\n        }\n    }\n\n    render() {\n        return (\n            <Input type='number' value={this.props.open} max={5} style={{marginLeft: \"3px\", marginRight: \"3px\"}}/>\n        )\n    }\n}\n\nexport default Valve;\n","import React from 'react';\nimport {Icon} from 'semantic-ui-react'\n\nclass FloatSensor extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            floating: this.props.floating,\n        }\n    }\n\n    render() {\n        if (this.props.floating) {\n            return <span>\n                floating\n                <Icon name={\"arrow circle up\"}/>\n            </span>\n        }\n        return <span>\n            not floating\n            <Icon name={\"arrow circle down\"}/>\n        </span>\n    }\n}\n\nexport default FloatSensor;\n","import io from 'socket.io-client';\nlet socket = io('ws://192.168.1.10:5000');\n\nfunction log_message(data){\n    let {module, variable, value } = data;\n    console.log(`${module}:\\t${variable}=${value}`);\n}\n\nsocket.on('value_update', log_message);\n\nexport default socket;\n","import React from 'react';\nimport EnableButton from \"./Enableable\";\nimport Valve from \"./Valve\";\nimport {Label, Loader, Segment} from 'semantic-ui-react'\nimport FloatSensor from \"./FloatSensor\";\nimport socket from \"./socketio\";\n\n\nclass Bilge extends React.Component {\n    constructor(props) {\n        super(props);\n        socket.on('value_update', this.update.bind(this));\n        this.state = {\n            enabled: null,\n            floating: null,\n            open: \"\",\n        }\n    }\n\n    update(data) {\n        if(this.props.module === data.module){\n            let state = this.state;\n            state.enabled = data.variable === \"enabled\" ? data.value : state.enabled;\n            state.floating = data.variable === \"floating\" ? data.value : state.floating;\n            state.open = data.variable === \"open\" ? data.value : state.open;\n            this.setState(state);\n        }\n    }\n\n    render() {\n        let content = <div>\n            <EnableButton enabled={this.state.enabled}/>\n            <Valve open={this.state.open}/>\n            <FloatSensor floating={this.state.floating}/>\n        </div>;\n\n        if(this.state.enabled === null || this.state.floating === null || this.state.open === \"\"){\n            content = <Loader>Loading</Loader>\n        }\n\n        return (\n            <Segment>\n                <Label className={\"top attached\"}>{this.props.name}</Label>\n                { content }\n            </Segment>\n        );\n    }\n}\n\nexport default Bilge;\n","import React from 'react';\nimport EnableButton from \"./Enableable\";\nimport {Label, Loader, Segment} from 'semantic-ui-react'\nimport socket from \"./socketio\";\n\n\nclass Coolant extends React.Component {\n\n    constructor(props) {\n        super(props);\n        socket.on('value_update', this.update.bind(this));\n        this.state = {\n            enabled: null,\n        }\n    }\n\n    update(data) {\n        if(this.props.module === data.module){\n            let state = this.state;\n            state.enabled = data.variable === \"enabled\" ? data.value : state.enabled;\n            this.setState(state);\n        }\n    }\n\n    render() {\n        let content = <div>\n            <EnableButton enabled={this.state.enabled}/>\n        </div>;\n\n        if(this.state.enabled === null){\n            content = <Loader>Loading</Loader>\n        }\n\n        return (\n            <Segment>\n                <Label className={\"top attached\"}>{this.props.name}</Label>\n                {content}\n            </Segment>\n        );\n    }\n}\n\nexport default Coolant;\n","import React from 'react';\nimport {Label, Segment} from 'semantic-ui-react'\nimport {Line} from 'react-chartjs-2';\nimport socket from \"./socketio\";\n\nclass TemperatureGraph extends React.Component {\n\n    constructor(props) {\n        super(props);\n        socket.on('value_update', this.update.bind(this));\n        this.state = {\n            temperatureData: {},\n            labels: [],\n        }\n    }\n\n    randomColor(){\n        return '#'+\n            Math.floor(Math.random()*16).toString(16)+\n            Math.floor(Math.random()*16).toString(16)+\n            Math.floor(Math.random()*16).toString(16)+\n            Math.floor(Math.random()*16).toString(16)+\n            Math.floor(Math.random()*16).toString(16)+\n            Math.floor(Math.random()*16).toString(16);\n    }\n\n    update(data) {\n        if(data.module === \"temperature_probes\") {\n            let name = data.variable;\n            let val = data.value;\n            let state = this.state;\n            let now = Date.now();\n            let probeData = state.temperatureData[name];\n\n\n            // add new probe\n            if(probeData === undefined){\n                state.temperatureData[name] = {\n                    data: [],\n                    label: name,\n                    borderColor: this.randomColor(),\n                    fill: false\n                };\n            }\n\n            // add new data\n            state.labels.push(now);\n            state.temperatureData[name].data.push({x:now, y:val});\n\n            // trim data\n            var BUFFER = 30 * 60 * 1000; /* ms */\n            let minDate = now - BUFFER;\n            while(state.temperatureData[name].data.length >= 1){\n                if(state.temperatureData[name].data[0].x < minDate){\n                    state.temperatureData[name].data.shift();\n                    continue\n                }\n                break\n            }\n            while(state.labels.length >= 1){\n                if(state.labels[0] < minDate){\n                    state.labels.shift();\n                    continue\n                }\n                break\n            }\n\n            this.setState(state);\n            this.forceUpdate()\n        }\n    }\n\n    chartData() {\n        return {\n            update: Date.now(),\n            labels: this.state.labels,\n            datasets: Object.values(this.state.temperatureData),\n        }\n    }\n\n    chartOptions() {\n\n        return {\n            scales: {\n                xAxes: [{\n                    type: 'time',\n                    time: {\n                        displayFormats: {\n                            quarter: 'MMM YYYY'\n                        }\n                    }\n                }]\n            },\n\n            scaleShowGridLines: true,\n            scaleGridLineColor: 'rgba(0,0,0,.05)',\n            scaleGridLineWidth: 1,\n            scaleShowHorizontalLines: true,\n            scaleShowVerticalLines: true,\n            bezierCurve: true,\n            bezierCurveTension: 0.4,\n            pointDot: true,\n            pointDotRadius: 4,\n            pointDotStrokeWidth: 1,\n            pointHitDetectionRadius: 20,\n            datasetStroke: true,\n            datasetStrokeWidth: 2,\n            datasetFill: true,\n            // legendTemplate: '<ul class=\\\"<%=name.toLowerCase()%>-legend\\\"><% for (var i=0; i<datasets.length; i++){%><li><span style=\\\"background-color:<%=datasets[i].strokeColor%>\\\"></span><%if(datasets[i].label){%><%=datasets[i].label%><%}%></li><%}%></ul>',\n        }\n    }\n\n    render() {\n        return (\n            <Segment>\n                <Label className={\"top attached\"}>{this.props.name}</Label>\n                <div>\n                    <Line\n                        data={this.chartData()}\n                        options={this.chartOptions()}\n                    />\n                </div>\n            </Segment>\n        );\n    }\n}\n\nexport default TemperatureGraph;\n","import React from 'react';\nimport './App.css';\nimport Bilge from \"./Bilge\";\nimport Coolant from \"./Coolant\";\nimport TemperatureGraph from \"./TemperatureGraph\";\nimport {Container, Grid} from \"semantic-ui-react\";\n\n\nclass App extends React.Component {\n\n    render(){\n        return (\n            <Container>\n                <Grid>\n                    <Grid.Row>\n                        <Grid.Column width={16}></Grid.Column>\n                    </Grid.Row>\n                    <Grid.Row>\n                        <Grid.Column width={8}>\n                            <Coolant name={\"Coolant Loop\"} module={\"coolant\"}/>\n                        </Grid.Column>\n                        <Grid.Column width={8}>\n                            <Bilge name={\"Wash Bilge\"} module={\"wash_bilge\"} style={{marginLeft: \"3em\"}}/>\n                        </Grid.Column>\n                    </Grid.Row>\n                </Grid>\n                <TemperatureGraph name={\"Temperature\"}/>\n            </Container>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'semantic-ui-css/semantic.min.css'\n\nReactDOM.render(<App/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}